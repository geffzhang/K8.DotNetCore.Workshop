// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/dotnetcore-latest
{
	"name": "K8.DotNetCore.Workshop",

    "dockerComposeFile": "../docker-compose.vscode.yaml",
    "service": "vscode",
	"workspaceFolder": "/workspace/K8.DotNetCore.Workshop",

    "shutdownAction": "none",

	"appPort": [9000 , "9000", 9001, "9001", 8001, "8001"],

	// Uncomment the next line to run commands after the container is created.
	"postCreateCommand": "dotnet restore",

    "runArgs": [
		// Uncomment the next line if you will use a ptrace-based debugger like C++, Go, and Rust.
		// "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined",

		// Uncomment the next line to use a non-root user. On Linux, this will prevent
		// new files getting created as root, but you may need to update the USER_UID
		// and USER_GID in .devcontainer/Dockerfile to match your user if not 1000.
		// "-u", "vscode",

		// "--mount", "type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock",
		"--mount", "type=bind,source=${env:HOME}/.kube,target=/root/.kube",

		// "-e", "SYNC_LOCALHOST_KUBECONFIG=true",
		"-e", "MSI_ENDPOINT=http://host.docker.internal:5050/oauth2/token",
		"-e", "MSI_SECRET=cdf37d81-9749-4ae6-9646-5daf9540a397"
		"-v","/var/run/docker.sock:/var/run/docker.sock",
		"-v", "$HOME/.kube:/root/.kube"
	],

	"extensions": [
        "docsmsft.docs-authoring-pack",
        "eamodio.gitlens",
        "EditorConfig.EditorConfig",
        "jchannon.csharpextensions",
        "ms-azuretools.vscode-docker",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "ms-vscode-remote.vscode-remote-extensionpack",
        "ms-vscode.azure-account",
        "ms-vscode.azurecli",
        "ms-vscode.csharp",
        "ms-vscode.vscode-node-azure-pack",
        "redhat.vscode-yaml",
        "streetsidesoftware.code-spell-checker",
        "technosophos.vscode-helm"
	],

	"settings": {
		"remote.extensionKind": {
			"ms-azuretools.vscode-docker": "workspace"
		},
		"vs-kubernetes": {
			"vs-kubernetes.kubectl-path": "/usr/local/bin/kubectl",
			"vs-kubernetes.helm-path": "/root/.vs-kubernetes/tools/helm/linux-amd64/helm",
			"vs-kubernetes.draft-path": "/root/.vs-kubernetes/tools/draft/linux-amd64/draft",
			"vs-kubernetes.minikube-path": "/root/.vs-kubernetes/tools/minikube/linux-amd64/minikube",
			"imageBuildTool": "Docker"
		}
	}
}
